<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
 xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:sec="http://www.springframework.org/schema/security"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.2.xsd"
>

<context:component-scan base-package="ovh.devnote" />
<mvc:annotation-driven/>
<sec:global-method-security pre-post-annotations="enabled"/>

<bean
class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/view/" />
<property name="suffix" value=".jsp" />
</bean>

<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
 destroy-method="close">
 <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
 <property name="jdbcUrl" value="jdbc:mysql://db4free.net/bazazajecia" />
 <property name="user" value="dorotastudia" />
 <property name="password" value="ndTEi9QFVsFyhdG" /> <!--ndTEi9QFVsFyhdG -->
 <property name="minPoolSize" value="2" />
 <property name="maxPoolSize" value="10" />
 <property name="maxIdleTime" value="20000" />
</bean>

<bean id="mySessionFactory"
class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
<property name="dataSource" ref="myDataSource" />
<property name="packagesToScan" value="ovh.devnote.hello18.entity" />
<property name="hibernateProperties">
 <props>
 <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
 <prop key="hibernate.show_sql">true</prop>
 </props>
</property>
 </bean>


<bean id="myTransactionManager"
 class="org.springframework.orm.hibernate5.HibernateTransactionManager">
 <property name="sessionFactory" ref="mySessionFactory"/>
 </bean>
<bean id="bcrypt"
class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

<!-- <bean id="httpFirewall" -->
<!--     class="org.springframework.security.web.firewall.StrictHttpFirewall"> -->
<!--     <property name="AllowUrlEncodedSlash" value="true"/> -->
<!--     <property name="AllowSemicolon" value="true"/> -->
<!--     </bean> -->

<!-- <sec:http-firewall ref="httpFirewall"/> -->

<tx:annotation-driven transaction-manager="myTransactionManager" />
<mvc:view-controller path="/login"/>
<mvc:view-controller path="/logout"/>
<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>

<sec:http>
 <sec:intercept-url pattern="/" access="permitAll()"/>
 <sec:intercept-url pattern="/register" access="permitAll()"/>
 <sec:intercept-url pattern="/login" access="isAnonymous()"/>
 <sec:intercept-url pattern="/logout" access="isAuthenticated()"/>

 <sec:intercept-url pattern="/shop/user" access="hasAuthority('ROLE_USER')"/>
 <sec:intercept-url pattern="/shop/list" access="hasAuthority('ROLE_USER')"/>
 <sec:intercept-url pattern="/cart" access="hasAuthority('ROLE_USER')"/>
 <sec:intercept-url pattern="/cart/delete" access="hasAuthority('ROLE_USER')"/>
 <sec:intercept-url pattern="/cart/empty" access="hasAuthority('ROLE_USER')"/>
 <sec:intercept-url pattern="/orders/createOrder" access="hasAuthority('ROLE_USER')"/>
 <sec:intercept-url pattern="/orders/userOrderList" access="hasAuthority('ROLE_USER')"/>


 <sec:intercept-url pattern="/shop/admin" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/manage" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/deleteForm" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/deleteProduct" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/formadd" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/saveProduct" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/chooseProductToUpdate" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/updateForm" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/updateProduct" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/orders/adminOrderList" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/orders/complete" access="hasAuthority('ROLE_ADMIN')"/>
 <sec:intercept-url pattern="/shop/all" access="hasAuthority('ROLE_ADMIN')"/>

<!--  <sec:intercept-url pattern="/**" access="hasAuthority('ROLE_ADMIN')"/> -->
 <sec:form-login login-page="/login"/>
 <sec:logout logout-url="/j_spring_security_logout"/>
 <sec:logout logout-success-url="/logout"/>
</sec:http>
<sec:authentication-manager>
 <sec:authentication-provider>
 <sec:password-encoder ref="bcrypt"/>
 <sec:jdbc-user-service data-source-ref="myDataSource"/>
 </sec:authentication-provider>
</sec:authentication-manager>
</beans>

